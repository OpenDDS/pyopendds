name: pyopendds

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * 5"

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        python-version:
        - '3.7'
        - '3.8'
        - '3.9'
        - '3.10'

    env:
      ACE_ROOT: '/usr/share/ace'
      TAO_ROOT: '/usr/share/tao'
      DDS_ROOT: '/usr/share/dds'

    steps:
    - uses: actions/checkout@v2.4.0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get OpenDDS
      uses: actions/checkout@v2.4.0
      with:
        repository: 'iguessthislldo/OpenDDS-Debian'
        path: OpenDDS-Debian
        ref: ubuntu_18_04

    - name: Install Dependencies
      run: |
        sudo dpkg -i OpenDDS-Debian/opendds.deb

    - name: Install PyOpenDDS
      run: |
        python -m pip --verbose install .

    - name: Build Basic Test
      run: |
        cd tests/basic_test
        mkdir build
        cd build
        cmake ..
        make
        itl2py -o basic_output basic_idl basic.itl
        cd basic_output
        python -m pip --verbose install .

    - name: Run Basic Test
      run: |
        cd tests/basic_test
        bash run_test.sh

    - name: Build Basic C++11 Test
      run: |
        cd tests/basic_test
        mkdir build_cpp11
        cd build_cpp11
        cmake -DCPP11_IDL=ON ..
        make
        itl2py -o basic_output basic_idl basic.itl
        cd basic_output
        python -m pip --verbose install .

    - name: Run Basic C++11 Test
      run: |
        cd tests/basic_test
        bash run_test.sh _cpp11

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 --show-source --doctests --statistics
      if: always()
